'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq

Partial Public Class SchoolEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=SchoolEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Property Courses() As DbSet(Of Course)
    Public Property Departments() As DbSet(Of Department)
    Public Property OfficeAssignments() As DbSet(Of OfficeAssignment)
    Public Property OnlineCourses() As DbSet(Of OnlineCourse)
    Public Property OnsiteCourses() As DbSet(Of OnsiteCourse)
    Public Property People() As DbSet(Of Person)
    Public Property StudentGrades() As DbSet(Of StudentGrade)

    Public Overridable Function DeleteOfficeAssignment(instructorID As Nullable(Of Integer)) As Integer
        Dim instructorIDParameter As ObjectParameter = If(instructorID.HasValue, New ObjectParameter("InstructorID", instructorID), New ObjectParameter("InstructorID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("DeleteOfficeAssignment", instructorIDParameter)
    End Function

    Public Overridable Function DeletePerson(personID As Nullable(Of Integer)) As Integer
        Dim personIDParameter As ObjectParameter = If(personID.HasValue, New ObjectParameter("PersonID", personID), New ObjectParameter("PersonID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("DeletePerson", personIDParameter)
    End Function

    Public Overridable Function GetDepartmentName(iD As Nullable(Of Integer), name As ObjectParameter) As Integer
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("GetDepartmentName", iDParameter, name)
    End Function

    Public Overridable Function GetStudentGrades(studentID As Nullable(Of Integer)) As ObjectResult(Of GetStudentGrades_Result)
        Dim studentIDParameter As ObjectParameter = If(studentID.HasValue, New ObjectParameter("StudentID", studentID), New ObjectParameter("StudentID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetStudentGrades_Result)("GetStudentGrades", studentIDParameter)
    End Function

    Public Overridable Function InsertOfficeAssignment(instructorID As Nullable(Of Integer), location As String) As ObjectResult(Of Byte())
        Dim instructorIDParameter As ObjectParameter = If(instructorID.HasValue, New ObjectParameter("InstructorID", instructorID), New ObjectParameter("InstructorID", GetType(Integer)))

        Dim locationParameter As ObjectParameter = If(location IsNot Nothing, New ObjectParameter("Location", location), New ObjectParameter("Location", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Byte())("InsertOfficeAssignment", instructorIDParameter, locationParameter)
    End Function

    Public Overridable Function InsertPerson(lastName As String, firstName As String, hireDate As Nullable(Of Date), enrollmentDate As Nullable(Of Date)) As ObjectResult(Of Nullable(Of Decimal))
        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim hireDateParameter As ObjectParameter = If(hireDate.HasValue, New ObjectParameter("HireDate", hireDate), New ObjectParameter("HireDate", GetType(Date)))

        Dim enrollmentDateParameter As ObjectParameter = If(enrollmentDate.HasValue, New ObjectParameter("EnrollmentDate", enrollmentDate), New ObjectParameter("EnrollmentDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Decimal))("InsertPerson", lastNameParameter, firstNameParameter, hireDateParameter, enrollmentDateParameter)
    End Function

    Public Overridable Function UpdateOfficeAssignment(instructorID As Nullable(Of Integer), location As String, origTimestamp As Byte()) As ObjectResult(Of Byte())
        Dim instructorIDParameter As ObjectParameter = If(instructorID.HasValue, New ObjectParameter("InstructorID", instructorID), New ObjectParameter("InstructorID", GetType(Integer)))

        Dim locationParameter As ObjectParameter = If(location IsNot Nothing, New ObjectParameter("Location", location), New ObjectParameter("Location", GetType(String)))

        Dim origTimestampParameter As ObjectParameter = If(origTimestamp IsNot Nothing, New ObjectParameter("OrigTimestamp", origTimestamp), New ObjectParameter("OrigTimestamp", GetType(Byte())))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Byte())("UpdateOfficeAssignment", instructorIDParameter, locationParameter, origTimestampParameter)
    End Function

    Public Overridable Function UpdatePerson(personID As Nullable(Of Integer), lastName As String, firstName As String, hireDate As Nullable(Of Date), enrollmentDate As Nullable(Of Date)) As Integer
        Dim personIDParameter As ObjectParameter = If(personID.HasValue, New ObjectParameter("PersonID", personID), New ObjectParameter("PersonID", GetType(Integer)))

        Dim lastNameParameter As ObjectParameter = If(lastName IsNot Nothing, New ObjectParameter("LastName", lastName), New ObjectParameter("LastName", GetType(String)))

        Dim firstNameParameter As ObjectParameter = If(firstName IsNot Nothing, New ObjectParameter("FirstName", firstName), New ObjectParameter("FirstName", GetType(String)))

        Dim hireDateParameter As ObjectParameter = If(hireDate.HasValue, New ObjectParameter("HireDate", hireDate), New ObjectParameter("HireDate", GetType(Date)))

        Dim enrollmentDateParameter As ObjectParameter = If(enrollmentDate.HasValue, New ObjectParameter("EnrollmentDate", enrollmentDate), New ObjectParameter("EnrollmentDate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("UpdatePerson", personIDParameter, lastNameParameter, firstNameParameter, hireDateParameter, enrollmentDateParameter)
    End Function

End Class
